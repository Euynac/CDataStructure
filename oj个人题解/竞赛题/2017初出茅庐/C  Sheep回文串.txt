#include <stdio.h>
#include <stdlib.h>


int cmp(const void *a,const void *b)
{
    return *(char *)a-*(char *)b;
}
int main()
{
    char odd[502],even[502],tmp;
    int i,q,p,sum,count,max;
    for(q=0,p=0,i=0;;i++)
    {
        if((i+1)%2==0)
        {
            even[q]=getchar();
            if(even[q]=='\n')break;
            q++;
        }
        else
        {
            odd[p]=getchar();
            if(odd[p]=='\n')break;
            p++;
        }
    }
    qsort(even,q,sizeof(even[0]),cmp);
    qsort(odd,p,sizeof(odd[0]),cmp);
    for(tmp=even[0],sum=0,count=0,i=0,max=0;i<q;i++)
    {
        if(tmp!=even[i])
        {
            if(max<count)max=count;
            sum+=count;
            printf("even=%c have %d\n",even[i-1],count);
            tmp=even[i];
            count=1;
        }
        else
        count++;
    }
    if(max<count)max=count;
    printf("max=%d\n",max);
    sum+=count;
    sum-=max;
    printf("sum=%d\n",sum);
    for(tmp=odd[0],count=0,i=0,max=0;i<p;i++)
    {
        if(tmp!=odd[i])
        {
            if(max<count)max=count;
            sum+=count;
            printf("odd=%c have %d\n",odd[i-1],count);
            tmp=odd[i];
            count=1;
        }
        else
        count++;
    }
    if(max<count)max=count;
    printf("max=%d\n",max);
    sum+=count;
    sum-=max;
    printf("sum=%d\n",sum);
    printf("even:\n");
    for(i=0;i<p;i++)
        printf("%c\n",even[i]);
    printf("odd:\n");
    for(i=0;i<p;i++)
        printf("%c\n",odd[i]);
    return 0;
}






`````````````````````
#include <stdio.h>
#include <stdlib.h>
int cmp(const void *a,const void *b)
{
    return *(char *)a-*(char *)b;
}
int main()
{
    char odd[500002],even[500002],tmp;
    int i,q,p,sum,count,max;
    for(q=0,p=0,i=0;;i++)
    {
        if((i+1)%2==0)
        {
            even[q]=getchar();
            if(even[q]=='\n')break;
            q++;
        }
        else
        {
            odd[p]=getchar();
            if(odd[p]=='\n')break;
            p++;
        }
    }
    qsort(even,q,sizeof(even[0]),cmp);
    qsort(odd,p,sizeof(odd[0]),cmp);
    for(tmp=even[0],sum=0,count=0,i=0,max=0;i<q;i++)
    {
        if(tmp!=even[i])
        {
            if(max<count)max=count;
            sum+=count;
            tmp=even[i];
            count=1;
        }
        else
        count++;
    }
    if(max<count)max=count;
    sum+=count;
    sum-=max;
    for(tmp=odd[0],count=0,i=0,max=0;i<p;i++)
    {
        if(tmp!=odd[i])
        {
            if(max<count)max=count;
            sum+=count;
            tmp=odd[i];
            count=1;
        }
        else
        count++;
    }
    if(max<count)max=count;
    sum+=count;
    sum-=max;
    printf("%d",sum);
    return 0;
}


