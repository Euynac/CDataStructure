#include "stdio.h"
#include "malloc.h"
#define LEN sizeof(struct DATA)

struct DATA
{
     long num;
     struct DATA *next;
};

struct DATA *create(int n)
{
     struct DATA *head=NULL,*p1=NULL,*p2=NULL;
     int i;
     for(i=1;i<=n;i++)
     {  p1=(struct DATA *)malloc(LEN);
        scanf("%ld",&p1->num);
        p1->next=NULL;
        if(i==1) head=p1;
        else p2->next=p1;
        p2=p1;
      }
      return(head);
}

struct DATA *merge(struct DATA *head, struct DATA *head2)
{
    struct DATA *p;
    p=head;
    while(p->next!=NULL)
        p=p->next;
    p->next=head2;
    return head;
}

struct DATA *insert(struct DATA *head, struct DATA *d)
{


    return head;
}

struct DATA *sort(struct DATA *head)
{
    struct DATA *p,*host,*pa,*host_p;
    int count,i,j,k;
    long temp;
    p=head;
    host_p=head;
    for(count=0;p!=NULL;count++)
        p=p->next;
    p=head;
    j=count;
    k=count;
    for(i=0;i<j-1;i++)
    {
        host=host_p;
        p=host;
        count=k--;
        for(count--;count>0;count--)
        {
            pa=p->next;
            if(host->num>pa->num)
            {
                temp=host->num;
                host->num=pa->num;
                pa->num=temp;
            }
            p=p->next;
        }
        host_p=host_p->next;
    }
    return head;
}

void print(struct DATA *head)
{
    struct DATA *p;
    p=head;
    while(p!=NULL)
    {
        printf("%ld",p->num);
        p=p->next;
        printf("\n");
    }
}

int main()
{
    struct DATA *head, *head2;
    int n;
    long del_num;
    scanf("%d",&n);
    head=create(n);
    scanf("%d",&n);
    head2=create(n);
    head = merge(head, head2);
    head = sort(head);
    print(head);
    return 0;
}
